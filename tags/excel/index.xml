<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>excel on Hank&#39;s Blog</title>
    <link>https://hank-leo.github.io/tags/excel/</link>
    <description>Recent content in excel on Hank&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hank-leo.github.io/tags/excel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Excel合并</title>
      <link>https://hank-leo.github.io/post/excel/Excel%E5%90%88%E5%B9%B6/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/excel/Excel%E5%90%88%E5%B9%B6/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # -*- coding: utf-8 -*- import pyexcel as pe e1 = pe.get_book_dict(file_name = &amp;#34;1.xlsx&amp;#34;) #读取表1为字典e1 e2 = pe.get_book_dict(file_name = &amp;#34;2.xlsx&amp;#34;) #读取表2为字典e2 e1.update(e2) #合并两个表的内容 v=[] #初始化列表 #两个表的内容转换为列表 for key in e1: #我想把这两行改为一个列表推导式，但是不成功：v = [e1[key] for key in e1]，还请帮忙，多谢 v += e1[key] #保存文件 pe.save_as(array</description>
    </item>
    
    <item>
      <title>Python快速设置Excel表格边框</title>
      <link>https://hank-leo.github.io/post/excel/Python%E5%BF%AB%E9%80%9F%E8%AE%BE%E7%BD%AEExcel%E8%A1%A8%E6%A0%BC%E8%BE%B9%E6%A1%86/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/excel/Python%E5%BF%AB%E9%80%9F%E8%AE%BE%E7%BD%AEExcel%E8%A1%A8%E6%A0%BC%E8%BE%B9%E6%A1%86/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import xlwings as xw #打开存好的excel app = xw.App() #设置应用 wb = xw.Book(&amp;#34;E:/Data/小蜜蜂超市销售报表.xlsx&amp;#34;) #打开文件 ws = wb.sheets[&amp;#39;Sheet1&amp;#39;] #选择表格 last_column = ws.range(1, 1).end(&amp;#39;right&amp;#39;).get_address(0, 0)[0] #获取最后列 last_row = ws.range(1, 1).end(&amp;#39;down&amp;#39;).row #获取最后行 a_range = f&amp;#39;A1:{last_column}{last_row}&amp;#39; #生成表格的数据范围 #设置</description>
    </item>
    
    <item>
      <title>在不打开excel的情况下用python执行excel</title>
      <link>https://hank-leo.github.io/post/excel/%E5%9C%A8%E4%B8%8D%E6%89%93%E5%BC%80excel%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E7%94%A8python%E6%89%A7%E8%A1%8Cexcel/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/excel/%E5%9C%A8%E4%B8%8D%E6%89%93%E5%BC%80excel%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E7%94%A8python%E6%89%A7%E8%A1%8Cexcel/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 import win32com.client import time path = r&amp;#39;absolute dir&amp;#39; #比如填文件的绝对路径，比如d:/file/stock.xlsx xl = win32com.client.DispatchEx(&amp;#34;Excel.Application&amp;#34;) workbook = xl.Workbooks.Open(path) xl.Visible = False workbook.RefreshAll() workbook.Save() # time.sleep(3) #如果文件足够大，那么最好是在关闭excel之前保持几秒钟 workbook.Close(True) xl.Quit()</description>
    </item>
    
    <item>
      <title>存储数据之excel</title>
      <link>https://hank-leo.github.io/post/spider/%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E4%B9%8Bexcel/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/spider/%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE%E4%B9%8Bexcel/</guid>
      <description>第一种方式是使用pandas库 def save(data): data = pd.DataFrame(data) data.to_excel(index=False) 第二种方式是使用openpyxl库 import openpyxl def save(title, head, data): outwb = openpyxl.Workbook() outws = outwb.active outws.title=title for h in range(len(head)): outws.cell(1,h+1).value=head[h] for row in data: outws.append(row) outwb.save(&amp;quot;path&amp;quot;) 第三种方式是使用xlwt库 def save(title, head, data): workbook = xlwt.Workbook(encoding=&#39;utf8&#39;) sheet = workbook.add_sheet(title, cell_overwrite_ok=True) for h in range(len(head)): sheet.write(0, h, head[h]) i = 1 for list in data: j = 0 for data in list: sheet.write(i, j, data) j += 1 i += 1 workbook.save(path)</description>
    </item>
    
  </channel>
</rss>