<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pandas on Hank&#39;s Blog</title>
    <link>https://hank-leo.github.io/tags/pandas/</link>
    <description>Recent content in pandas on Hank&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 03 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hank-leo.github.io/tags/pandas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>瑞幸咖啡基于地理位置的商业分析</title>
      <link>https://hank-leo.github.io/post/analysis/%E7%91%9E%E5%B9%B8%E5%92%96%E5%95%A1%E5%9F%BA%E4%BA%8E%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/%E7%91%9E%E5%B9%B8%E5%92%96%E5%95%A1%E5%9F%BA%E4%BA%8E%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%95%86%E4%B8%9A%E5%88%86%E6%9E%90/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Pandas基础操作</title>
      <link>https://hank-leo.github.io/post/analysis/Pandas%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/Pandas%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid>
      <description>行列操作 1.修改列名 1 data.columns=[&amp;#34;columns1&amp;#34;,&amp;#34;columns2&amp;#34;,&amp;#34;columns3&amp;#34;] 2.找出空值所在行 1 2 3 data[data[&amp;#39;column1&amp;#39;].isnull()] #或者 result=data[data.isnull().T.any()] 注意isnull()的结果需要求转置之后，才能进行any()操作 非转置: data.isnull().any()，得到的每一列求any()计算的结果，输出为列的Series 转置: frame3.isnull().T.any()</description>
    </item>
    
    <item>
      <title>阿里云天池短租数据集分析赛</title>
      <link>https://hank-leo.github.io/post/analysis/%E9%98%BF%E9%87%8C%E4%BA%91%E5%A4%A9%E6%B1%A0%E7%9F%AD%E7%A7%9F%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%86%E6%9E%90%E8%B5%9B/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/%E9%98%BF%E9%87%8C%E4%BA%91%E5%A4%A9%E6%B1%A0%E7%9F%AD%E7%A7%9F%E6%95%B0%E6%8D%AE%E9%9B%86%E5%88%86%E6%9E%90%E8%B5%9B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>利用PyQt5交互导出数据</title>
      <link>https://hank-leo.github.io/post/spider/pyqt/%E5%88%A9%E7%94%A8PyQt5%E4%BA%A4%E4%BA%92%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/spider/pyqt/%E5%88%A9%E7%94%A8PyQt5%E4%BA%A4%E4%BA%92%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE/</guid>
      <description>项目说明 MainFunc.py 主文件功能 选取文件(xlsm,csv) 导出match、减少、新增、更新部分的数据 各个部分新开窗口操作 源文件 SubPart.py 减少部分操作文件 状态确认： 关店、装修、尚未开业的数据 做过reconcile的数据 exc1部分的数据 exc2部分的数据 VDR新增数据 来源harv数据 最后导出到csv</description>
    </item>
    
    <item>
      <title>朝阳医院药品销售数据分析</title>
      <link>https://hank-leo.github.io/post/analysis/%E4%BA%B2%E8%87%AA%E5%8A%A8%E6%89%8B%E6%9C%9D%E9%98%B3%E5%8C%BB%E9%99%A2%E8%8D%AF%E5%93%81%E9%94%80%E5%94%AE%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/%E4%BA%B2%E8%87%AA%E5%8A%A8%E6%89%8B%E6%9C%9D%E9%98%B3%E5%8C%BB%E9%99%A2%E8%8D%AF%E5%93%81%E9%94%80%E5%94%AE%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</guid>
      <description>前言 先来囊括一下数据分析的流程，大致分为以下几个部分： 提出问题 理解数据 数据清洗 构建模型 数据可视化 提出问题 在进行数据分析之前，先要明确分析的目标是什么，只有这样才能更为高效的选取数据，进行分析研究，最终产生价值。 本次目标是从销售数据中分析书以下业务指标： 月均消费次数 月均消费金额 客单</description>
    </item>
    
    <item>
      <title>肯德基门店分布可视化分析</title>
      <link>https://hank-leo.github.io/post/analysis/%E8%82%AF%E5%BE%B7%E5%9F%BA%E9%97%A8%E5%BA%97%E5%88%86%E5%B8%83%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/%E8%82%AF%E5%BE%B7%E5%9F%BA%E9%97%A8%E5%BA%97%E5%88%86%E5%B8%83%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%86%E6%9E%90/</guid>
      <description>项目介绍 背景：肯德基快餐公司是全球大型连锁快餐企业，截止至2020年已进驻了中国140多个城市，门店突破7000家。 根据门店地址，使用Pyecharts对肯德基门店分布进行可视化分析： 可视化需要解决的思路: 需要把门店地址转换成经纬度 需要根据省份、城市、详细地址信息得到经纬度 构造G</description>
    </item>
    
    <item>
      <title>Pandas异常值处理</title>
      <link>https://hank-leo.github.io/post/analysis/Pandas%E5%BC%82%E5%B8%B8%E5%80%BC%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/Pandas%E5%BC%82%E5%B8%B8%E5%80%BC%E5%A4%84%E7%90%86/</guid>
      <description>导包 import pandas as pd 生成异常数据 df=pd.DataFrame({&#39;col1&#39;:[1,120,3,5,2,12,13],&#39;col2&#39;:[12,17,31,53,22,32,43]}) #打印 print(df) col1 col2 0 1 12 1 120 17 2 3 31 3 5 53 4 2 22 5 12 32 6 13 43 df_zscore=df.copy() #复制一个用来存储Z-score得分的数据框 cols=df.columns for col in cols: df_col=df[col] z_score=(df_col - df_col.mean()) / df_col.std() #计算每列的Z-score得分 df_zscore[col] = z_score.abs() &amp;gt; 2.2 #判断Z-score得分是否大于2.2,如果是则为True,否则为False #打印，为Tru</description>
    </item>
    
    <item>
      <title>Pandas缺失值处理</title>
      <link>https://hank-leo.github.io/post/analysis/Pandas%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/Pandas%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86/</guid>
      <description>导入库 import pandas as pd import numpy as np from sklearn.preprocessing import Imputer 生成缺失数据 df=pd.DataFrame(np.random.randn(6,4),columns=[&#39;col1&#39;,&#39;col2&#39;,&#39;col3&#39;,&#39;col4&#39;]) df.iloc[1:2,1] = np.nan #增加缺失值 df.iloc[4,3] = np.nan #增加缺失值 #打印输出 print(df) col1 col2 col3 col4 0 -0.977511 -0.566332 -0.529934 1.489695 1 -0.491128 NaN -0.811174 -1.102717 2 0.385777 -0.638822 0.325953 -0.240780 3 0.938351 -0.746889 0.375200 -0.715265 4 1.103418 0.238959 -0.459114 NaN 5 1.002177 0.448844 -0.584634 -1.038151 查看缺失值位置 nan_all=df.isnull() #打印 print(nan_all) col1 col2 col3 col4 0 False False False False 1 False True False False 2 False False False False 3 False False False False 4 False False False True 5 False False False False #获取含有NA的列 nan_col1=df.isnull().any() #打印 print(nan_col1)</description>
    </item>
    
    <item>
      <title>Pandas重复值处理</title>
      <link>https://hank-leo.github.io/post/analysis/Pandas%E9%87%8D%E5%A4%8D%E5%80%BC%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hank-leo.github.io/post/analysis/Pandas%E9%87%8D%E5%A4%8D%E5%80%BC%E5%A4%84%E7%90%86/</guid>
      <description>导包 import pandas as pd 生成数据 data1,data2,data3,data4=[&#39;a&#39;,3],[&#39;b&#39;,2],[&#39;a&#39;,3],[&#39;c&#39;,2] df=pd.DataFrame([data1,data2,data3,data4],columns=[&#39;col1&#39;,&#39;col2&#39;]) print(df) col1 col2 0 a 3 1 b 2 2 a 3 3 c 2 判断数据 isDuplicated=df.duplicated() #判断重复数据记录 print(isDuplicated) 0 False 1 False 2 True 3 False dtype: bool 删除重复的数据 print(df.drop_duplicates()) #删除所有列值相同的记录，index为2的记录行被删除 col1 col2 0 a 3 1 b 2 3 c 2 #删除col1列值相同的记录，index为2的记录行被删除 print(df.drop_duplicates([&#39;col1&#39;])) col1 col2 0 a 3 1 b 2 3 c 2 #</description>
    </item>
    
  </channel>
</rss>